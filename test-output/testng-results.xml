<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="20" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-24T11:20:31 IST" name="Parallel Test" finished-at="2024-12-24T11:20:45 IST" duration-ms="14601">
    <groups>
    </groups>
    <test started-at="2024-12-24T11:20:31 IST" name="Sanity_Test" finished-at="2024-12-24T11:20:45 IST" duration-ms="14601">
      <class name="com.notes.UpdateNotes">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.UpdateNotes@1f9f6368]" started-at="2024-12-24T11:20:42 IST" name="getToken" finished-at="2024-12-24T11:20:43 IST" duration-ms="499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNote()[pri:1, instance:com.notes.UpdateNotes@1f9f6368]" started-at="2024-12-24T11:20:43 IST" name="createNote" finished-at="2024-12-24T11:20:44 IST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNote -->
        <test-method signature="updateNote()[pri:2, instance:com.notes.UpdateNotes@1f9f6368]" started-at="2024-12-24T11:20:44 IST" name="updateNote" finished-at="2024-12-24T11:20:44 IST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateNote -->
      </class> <!-- com.notes.UpdateNotes -->
      <class name="com.notes.LogIn_CreateToken">
        <test-method signature="getToken()[pri:0, instance:com.notes.LogIn_CreateToken@5d908d47]" started-at="2024-12-24T11:20:43 IST" name="getToken" finished-at="2024-12-24T11:20:44 IST" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
      </class> <!-- com.notes.LogIn_CreateToken -->
      <class name="com.notes.LogIn_Negative_TCs">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.LogIn_Negative_TCs@5efa40fe]" started-at="2024-12-24T11:20:42 IST" name="getToken" finished-at="2024-12-24T11:20:42 IST" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="loginAsExistingUser_TCS(java.lang.String,java.lang.String,int,java.lang.String)[pri:0, instance:com.notes.LogIn_Negative_TCs@5efa40fe]" started-at="2024-12-24T11:20:43 IST" name="loginAsExistingUser_TCS" data-provider="LogInTestData" finished-at="2024-12-24T11:20:44 IST" duration-ms="785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shashank@abc.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[shashank]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Login successful]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAsExistingUser_TCS -->
        <test-method signature="loginAsExistingUser_TCS(java.lang.String,java.lang.String,int,java.lang.String)[pri:0, instance:com.notes.LogIn_Negative_TCs@5efa40fe]" started-at="2024-12-24T11:20:44 IST" name="loginAsExistingUser_TCS" data-provider="LogInTestData" finished-at="2024-12-24T11:20:44 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[shashank]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[A valid email address is required]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAsExistingUser_TCS -->
        <test-method signature="loginAsExistingUser_TCS(java.lang.String,java.lang.String,int,java.lang.String)[pri:0, instance:com.notes.LogIn_Negative_TCs@5efa40fe]" started-at="2024-12-24T11:20:44 IST" name="loginAsExistingUser_TCS" data-provider="LogInTestData" finished-at="2024-12-24T11:20:44 IST" duration-ms="333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shashank@abc.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password must be between 6 and 30 characters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAsExistingUser_TCS -->
        <test-method signature="loginAsExistingUser_TCS(java.lang.String,java.lang.String,int,java.lang.String)[pri:0, instance:com.notes.LogIn_Negative_TCs@5efa40fe]" started-at="2024-12-24T11:20:44 IST" name="loginAsExistingUser_TCS" data-provider="LogInTestData" finished-at="2024-12-24T11:20:45 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shashank@abccom]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[shashank]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[A valid email address is required]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAsExistingUser_TCS -->
        <test-method signature="loginAsExistingUser_TCS(java.lang.String,java.lang.String,int,java.lang.String)[pri:0, instance:com.notes.LogIn_Negative_TCs@5efa40fe]" started-at="2024-12-24T11:20:45 IST" name="loginAsExistingUser_TCS" data-provider="LogInTestData" finished-at="2024-12-24T11:20:45 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shashank@abc.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asd]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[400]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Password must be between 6 and 30 characters]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAsExistingUser_TCS -->
      </class> <!-- com.notes.LogIn_Negative_TCs -->
      <class name="com.notes.Create_Notes_All_TCs">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.Create_Notes_All_TCs@12591ac8]" started-at="2024-12-24T11:20:34 IST" name="getToken" finished-at="2024-12-24T11:20:34 IST" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNotes_TCS(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.notes.Create_Notes_All_TCs@12591ac8]" started-at="2024-12-24T11:20:43 IST" name="createNotes_TCS" data-provider="create_note" finished-at="2024-12-24T11:20:44 IST" duration-ms="764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Home]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Home_API]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Done for Home-Sha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes_TCS -->
        <test-method signature="createNotes_TCS(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.notes.Create_Notes_All_TCs@12591ac8]" started-at="2024-12-24T11:20:44 IST" name="createNotes_TCS" data-provider="create_note" finished-at="2024-12-24T11:20:44 IST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Work]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Work_API]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Done for Work-Sha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes_TCS -->
        <test-method signature="createNotes_TCS(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.notes.Create_Notes_All_TCs@12591ac8]" started-at="2024-12-24T11:20:44 IST" name="createNotes_TCS" data-provider="create_note" finished-at="2024-12-24T11:20:45 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Personal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Personal_API]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Done for Personal-Sha]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes_TCS -->
      </class> <!-- com.notes.Create_Notes_All_TCs -->
      <class name="com.notes.Create_Notes_Using_File_UsingBaseClass">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.Create_Notes_Using_File_UsingBaseClass@1e4f4a5c]" started-at="2024-12-24T11:20:35 IST" name="getToken" finished-at="2024-12-24T11:20:35 IST" duration-ms="493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNotes()[pri:0, instance:com.notes.Create_Notes_Using_File_UsingBaseClass@1e4f4a5c]" started-at="2024-12-24T11:20:43 IST" name="createNotes" finished-at="2024-12-24T11:20:44 IST" duration-ms="877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes -->
      </class> <!-- com.notes.Create_Notes_Using_File_UsingBaseClass -->
      <class name="com.notes.CreateNotes">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.CreateNotes@798162bc]" started-at="2024-12-24T11:20:31 IST" name="getToken" finished-at="2024-12-24T11:20:33 IST" duration-ms="2811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNote()[pri:0, instance:com.notes.CreateNotes@798162bc]" started-at="2024-12-24T11:20:43 IST" name="createNote" finished-at="2024-12-24T11:20:44 IST" duration-ms="710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNote -->
      </class> <!-- com.notes.CreateNotes -->
      <class name="com.notes.Delete_All_Notes_Before_Creating">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.Delete_All_Notes_Before_Creating@23941fb4]" started-at="2024-12-24T11:20:36 IST" name="getToken" finished-at="2024-12-24T11:20:42 IST" duration-ms="5667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNotes()[pri:0, instance:com.notes.Delete_All_Notes_Before_Creating@23941fb4]" started-at="2024-12-24T11:20:43 IST" name="createNotes" finished-at="2024-12-24T11:20:44 IST" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes -->
      </class> <!-- com.notes.Delete_All_Notes_Before_Creating -->
      <class name="com.notes.DeleteNotes">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.DeleteNotes@7486b455]" started-at="2024-12-24T11:20:36 IST" name="getToken" finished-at="2024-12-24T11:20:36 IST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNote()[pri:1, instance:com.notes.DeleteNotes@7486b455]" started-at="2024-12-24T11:20:43 IST" name="createNote" finished-at="2024-12-24T11:20:44 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNote -->
        <test-method signature="deleteNotes()[pri:2, instance:com.notes.DeleteNotes@7486b455]" started-at="2024-12-24T11:20:44 IST" name="deleteNotes" finished-at="2024-12-24T11:20:44 IST" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteNotes -->
      </class> <!-- com.notes.DeleteNotes -->
      <class name="com.notes.Create_Unique_Notes">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.Create_Unique_Notes@465232e9]" started-at="2024-12-24T11:20:35 IST" name="getToken" finished-at="2024-12-24T11:20:36 IST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNotes()[pri:0, instance:com.notes.Create_Unique_Notes@465232e9]" started-at="2024-12-24T11:20:43 IST" name="createNotes" finished-at="2024-12-24T11:20:44 IST" duration-ms="786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes -->
      </class> <!-- com.notes.Create_Unique_Notes -->
      <class name="com.notes.CreateNotesCallingBAseClass">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.CreateNotesCallingBAseClass@1df8da7a]" started-at="2024-12-24T11:20:33 IST" name="getToken" finished-at="2024-12-24T11:20:34 IST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNotes()[pri:0, instance:com.notes.CreateNotesCallingBAseClass@1df8da7a]" started-at="2024-12-24T11:20:43 IST" name="createNotes" finished-at="2024-12-24T11:20:44 IST" duration-ms="714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes -->
      </class> <!-- com.notes.CreateNotesCallingBAseClass -->
      <class name="com.notes.Create_Notes_Using_File">
        <test-method is-config="true" signature="getToken()[pri:0, instance:com.notes.Create_Notes_Using_File@37313c65]" started-at="2024-12-24T11:20:34 IST" name="getToken" finished-at="2024-12-24T11:20:35 IST" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method signature="createNotes()[pri:0, instance:com.notes.Create_Notes_Using_File@37313c65]" started-at="2024-12-24T11:20:43 IST" name="createNotes" finished-at="2024-12-24T11:20:44 IST" duration-ms="810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNotes -->
      </class> <!-- com.notes.Create_Notes_Using_File -->
      <class name="com.notes.GET_Soap_Request">
        <test-method signature="post_Add_Method()[pri:0, instance:com.notes.GET_Soap_Request@660acfb]" started-at="2024-12-24T11:20:43 IST" name="post_Add_Method" finished-at="2024-12-24T11:20:44 IST" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- post_Add_Method -->
      </class> <!-- com.notes.GET_Soap_Request -->
    </test> <!-- Sanity_Test -->
  </suite> <!-- Parallel Test -->
</testng-results>
